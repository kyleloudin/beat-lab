{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Beat Lab\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"radio\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createCommentVNode(\" <input v-on:keyup.enter=\\\"playSound()\\\" /> \"), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.bpm = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.bpm]]), _hoisted_2], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","type","_hoisted_1","_createCommentVNode","$data","bpm","$event","_hoisted_2"],"sources":["/Users/kyleloudin/Desktop/repo/drum-machine/src/components/drum-machine.vue"],"sourcesContent":["<template>\n  <h1>Beat Lab</h1>\n  <!-- <input v-on:keyup.enter=\"playSound()\" /> -->\n  <input v-model=\"bpm\" />\n  <button type=\"radio\" />\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      bpm: \"\",\n      sounds: [\n        {\n          title: \"snare\",\n          sound: \"snare.wav\",\n          key: \"k\",\n        },\n      ],\n    };\n  },\n  methods: {\n    playSound(e) {\n      let fileName = \"\";\n      switch (e.key) {\n        case \"a\":\n          fileName = \"kick.wav\";\n          break;\n        case \"s\":\n          fileName = \"kick2.wav\";\n          break;\n        case \"z\":\n          fileName = \"kick3.wav\";\n          break;\n        case \"x\":\n          fileName = \"kick4.wav\";\n          break;\n        case \"d\":\n          fileName = \"snare.wav\";\n          break;\n        case \"f\":\n          fileName = \"snare2.wav\";\n          break;\n        case \"c\":\n          fileName = \"snare3.wav\";\n          break;\n        case \"v\":\n          fileName = \"snare4.wav\";\n          break;\n        case \"i\":\n          fileName = \"hihat1.wav\";\n          break;\n        case \"o\":\n          fileName = \"hihat2.wav\";\n          break;\n        case \"p\":\n          fileName = \"hihat3.wav\";\n          break;\n      }\n      let audio = new Audio(require(\"../assets/\" + fileName));\n      audio.play();\n      setTimeout(this.playSound, 10000);\n    },\n    test() {\n      return alert(\"test\");\n    },\n  },\n  created() {\n    window.addEventListener(\"keydown\", this.playSound);\n  },\n  unmounted() {\n    window.removeEventListener(\"keydown\", this.playSound);\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";gCACEA,mBAAA,CAAiB,YAAb,UAAQ;gCAGZA,mBAAA,CAAuB;EAAfC,IAAI,EAAC;AAAO;;;6DAHpBC,UAAiB,EACjBC,mBAAA,gDAAiD,E,gBACjDH,mBAAA,CAAuB;+DAAPI,KAAA,CAAAC,GAAG,GAAAC,MAAA;iDAAHF,KAAA,CAAAC,GAAG,E,GACnBE,UAAuB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}