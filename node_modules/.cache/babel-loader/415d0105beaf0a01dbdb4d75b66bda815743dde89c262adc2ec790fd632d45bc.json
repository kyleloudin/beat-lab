{"ast":null,"code":"export default {\n  data: () => ({\n    WHITE_KEYS: [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\"],\n    BLACK_KEYS: [\"s\", \"d\", \"g\", \"h\", \"j\"],\n    keys: window.querySelectorAll(\".key\"),\n    whiteKeys: window.querySelectorAll(\".key.white\"),\n    blackKeys: window.querySelectorAll(\".key.black\")\n  }),\n  methods: {\n    playNote(key) {\n      const Audio = document.getElementById(key.dataset.note);\n      Audio.currentTime = 0;\n      Audio.play();\n      key.classList.add(\"active\");\n      Audio.addEventListener(\"ended\", () => {\n        key.classList.remove(\"active\");\n      });\n    }\n  },\n  created() {\n    window.addEventListener(\"keydown\", e => {\n      if (e.repeat) return;\n      const key = e.key;\n      const whiteKeyIndex = WHITE_KEYS.indexOf(key);\n      const blackKeyIndex = BLACK_KEYS.indexOf(key);\n      if (whiteKeyIndex > -1) playNote(whiteKeys[whiteKeyIndex]);\n      if (blackKeyIndex > -1) playNote(blackKeys[blackKeyIndex]);\n    });\n  },\n  unmounted() {\n    window.removeEventListener(\"keydown\", this.playSound);\n  }\n};","map":{"version":3,"names":["data","WHITE_KEYS","BLACK_KEYS","keys","window","querySelectorAll","whiteKeys","blackKeys","methods","playNote","key","Audio","document","getElementById","dataset","note","currentTime","play","classList","add","addEventListener","remove","created","e","repeat","whiteKeyIndex","indexOf","blackKeyIndex","unmounted","removeEventListener","playSound"],"sources":["src/components/Piano.vue"],"sourcesContent":["<template>\n  <body>\n    <div class=\"piano\">\n      <div data-note=\"C\" class=\"key white\"></div>\n      <div data-note=\"Db\" class=\"key black\"></div>\n      <div data-note=\"D\" class=\"key white\"></div>\n      <div data-note=\"Eb\" class=\"key black\"></div>\n      <div data-note=\"E\" class=\"key white\"></div>\n      <div data-note=\"F\" class=\"key white\"></div>\n      <div data-note=\"Gb\" class=\"key black\"></div>\n      <div data-note=\"G\" class=\"key white\"></div>\n      <div data-note=\"Ab\" class=\"key black\"></div>\n      <div data-note=\"A\" class=\"key white\"></div>\n      <div data-note=\"Bb\" class=\"key black\"></div>\n      <div data-note=\"B\" class=\"key white\"></div>\n    </div>\n\n    <audio id=\"C\" src=\"notes/C.mp3\"></audio>\n    <audio id=\"Db\" src=\"notes/Db.mp3\"></audio>\n    <audio id=\"D\" src=\"notes/D.mp3\"></audio>\n    <audio id=\"Eb\" src=\"notes/Eb.mp3\"></audio>\n    <audio id=\"E\" src=\"notes/E.mp3\"></audio>\n    <audio id=\"F\" src=\"notes/F.mp3\"></audio>\n    <audio id=\"Gb\" src=\"notes/Gb.mp3\"></audio>\n    <audio id=\"G\" src=\"notes/G.mp3\"></audio>\n    <audio id=\"Ab\" src=\"notes/Ab.mp3\"></audio>\n    <audio id=\"A\" src=\"notes/A.mp3\"></audio>\n    <audio id=\"Bb\" src=\"notes/Bb.mp3\"></audio>\n    <audio id=\"B\" src=\"notes/B.mp3\"></audio>\n</body>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    WHITE_KEYS: [\"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\"],\n    BLACK_KEYS: [\"s\", \"d\", \"g\", \"h\", \"j\"],\n    keys: window.querySelectorAll(\".key\"),\n    whiteKeys: window.querySelectorAll(\".key.white\"),\n    blackKeys: window.querySelectorAll(\".key.black\"),\n  }),\n\n  methods: {\n    playNote(key) {\n      const Audio = document.getElementById(key.dataset.note);\n      Audio.currentTime = 0;\n      Audio.play();\n      key.classList.add(\"active\");\n      Audio.addEventListener(\"ended\", () => {\n        key.classList.remove(\"active\");\n      });\n    },\n  },\n\n  created() {\n    window.addEventListener(\"keydown\", (e) => {\n      if (e.repeat) return;\n      const key = e.key;\n      const whiteKeyIndex = WHITE_KEYS.indexOf(key);\n      const blackKeyIndex = BLACK_KEYS.indexOf(key);\n\n      if (whiteKeyIndex > -1) playNote(whiteKeys[whiteKeyIndex]);\n      if (blackKeyIndex > -1) playNote(blackKeys[blackKeyIndex]);\n    });\n  },\n\n  unmounted() {\n    window.removeEventListener(\"keydown\", this.playSound);\n  },\n};\n</script>\n\n<style>\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nbody {\n  background-color: #143f6b;\n  margin: 0;\n  min-height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.piano {\n  display: flex;\n}\n\n.key {\n  height: calc(var(--width) * 4);\n  width: var(--width);\n}\n\n.white {\n  --width: 100px;\n  background-color: white;\n  border: 1px solid #333;\n}\n\n.white.active {\n  background-color: #ccc;\n}\n\n.black {\n  --width: 60px;\n  background-color: black;\n  margin-left: calc(var(--width) / -2);\n  margin-right: calc(var(--width) / -2);\n  z-index: 2;\n}\n\n.black.active {\n  background-color: #333;\n}\n</style>\n"],"mappings":"AAiCA;EACAA,IAAA,EAAAA,CAAA;IACAC,UAAA;IACAC,UAAA;IACAC,IAAA,EAAAC,MAAA,CAAAC,gBAAA;IACAC,SAAA,EAAAF,MAAA,CAAAC,gBAAA;IACAE,SAAA,EAAAH,MAAA,CAAAC,gBAAA;EACA;EAEAG,OAAA;IACAC,SAAAC,GAAA;MACA,MAAAC,KAAA,GAAAC,QAAA,CAAAC,cAAA,CAAAH,GAAA,CAAAI,OAAA,CAAAC,IAAA;MACAJ,KAAA,CAAAK,WAAA;MACAL,KAAA,CAAAM,IAAA;MACAP,GAAA,CAAAQ,SAAA,CAAAC,GAAA;MACAR,KAAA,CAAAS,gBAAA;QACAV,GAAA,CAAAQ,SAAA,CAAAG,MAAA;MACA;IACA;EACA;EAEAC,QAAA;IACAlB,MAAA,CAAAgB,gBAAA,YAAAG,CAAA;MACA,IAAAA,CAAA,CAAAC,MAAA;MACA,MAAAd,GAAA,GAAAa,CAAA,CAAAb,GAAA;MACA,MAAAe,aAAA,GAAAxB,UAAA,CAAAyB,OAAA,CAAAhB,GAAA;MACA,MAAAiB,aAAA,GAAAzB,UAAA,CAAAwB,OAAA,CAAAhB,GAAA;MAEA,IAAAe,aAAA,OAAAhB,QAAA,CAAAH,SAAA,CAAAmB,aAAA;MACA,IAAAE,aAAA,OAAAlB,QAAA,CAAAF,SAAA,CAAAoB,aAAA;IACA;EACA;EAEAC,UAAA;IACAxB,MAAA,CAAAyB,mBAAA,iBAAAC,SAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}