{"ast":null,"code":"import * as Tone from \"tone\";\nexport default {\n  data() {\n    return {\n      pianoKeys: [\n        // ... your pianoKeys data here ...\n      ],\n      activeSynths: {} // Track active synths for each key\n    };\n  },\n\n  methods: {\n    playKey(key) {\n      key.active = true;\n      if (!this.activeSynths[key.keyCode]) {\n        const synth = new Tone.Synth().toDestination();\n        this.activeSynths[key.keyCode] = synth;\n        switch (key.keyCode) {\n          case 65:\n            synth.triggerAttackRelease(\"C4\", \"4n\");\n            break;\n          case 87:\n            synth.triggerAttackRelease(\"C#4\", \"8n\");\n            break;\n          // ... add cases for other keys ...\n        }\n      }\n    },\n\n    stopKey(key) {\n      key.active = false;\n      if (this.activeSynths[key.keyCode]) {\n        this.activeSynths[key.keyCode].triggerRelease();\n        delete this.activeSynths[key.keyCode];\n      }\n    },\n    handleKeyDown(event) {\n      // Find the matching piano key based on the keyCode\n      const key = this.pianoKeys.find(key => key.keyCode === event.keyCode);\n      if (key) {\n        this.playKey(key);\n      }\n    },\n    handleKeyUp(event) {\n      // Find the matching piano key based on the keyCode\n      const key = this.pianoKeys.find(key => key.keyCode === event.keyCode);\n      if (key) {\n        this.stopKey(key);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Tone","data","pianoKeys","activeSynths","methods","playKey","key","active","keyCode","synth","Synth","toDestination","triggerAttackRelease","stopKey","triggerRelease","handleKeyDown","event","find","handleKeyUp"],"sources":["src/components/Piano.vue"],"sourcesContent":["\n\n<template>\n  <container class=\"piano-container\">\n    <row>\n      <btn\n        v-for=\"key in pianoKeys\"\n        :key=\"key.id\"\n        :class=\"['piano-key', key.type, { active: key.active }]\"\n        @mousedown=\"playKey(key)\"\n        @mouseup=\"stopKey(key)\"\n        @touchstart=\"playKey(key)\"\n        @touchend=\"stopKey(key)\"\n      >\n        {{ key.label }}\n      </btn>\n    </row>\n  </container>\n</template>\n\n<script>\nimport * as Tone from \"tone\";\nexport default {\n  data() {\n    return {\n      pianoKeys: [\n        // ... your pianoKeys data here ...\n      ],\n      activeSynths: {}, // Track active synths for each key\n    };\n  },\n  methods: {\n    playKey(key) {\n      key.active = true;\n\n      if (!this.activeSynths[key.keyCode]) {\n        const synth = new Tone.Synth().toDestination();\n        this.activeSynths[key.keyCode] = synth;\n\n        switch (key.keyCode) {\n          case 65:\n            synth.triggerAttackRelease(\"C4\", \"4n\");\n            break;\n          case 87:\n            synth.triggerAttackRelease(\"C#4\", \"8n\");\n            break;\n          // ... add cases for other keys ...\n        }\n      }\n    },\n    stopKey(key) {\n      key.active = false;\n\n      if (this.activeSynths[key.keyCode]) {\n        this.activeSynths[key.keyCode].triggerRelease();\n        delete this.activeSynths[key.keyCode];\n      }\n    },\n    handleKeyDown(event) {\n      // Find the matching piano key based on the keyCode\n      const key = this.pianoKeys.find((key) => key.keyCode === event.keyCode);\n      if (key) {\n        this.playKey(key);\n      }\n    },\n    handleKeyUp(event) {\n      // Find the matching piano key based on the keyCode\n      const key = this.pianoKeys.find((key) => key.keyCode === event.keyCode);\n      if (key) {\n        this.stopKey(key);\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.piano-container {\n  \n  padding: 10px;\n  display: flex;\n  justify-content: center;\n  border-radius: 10px;\n  \n  \n}\n\n.piano-row {\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  height: 220px;\n  width: 1000px;\n  box-shadow: 0 4px 6px rgb(0, 0, 0);\n}\n\n.piano-key {\n  display: inline-flex;\n  align-items: flex-end;\n  justify-content: center;\n  min-width: 40px;\n  height: 220px;\n  font-size: 14px;\n  font-weight: bold;\n  background-color: #fff;\n  color: #000;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  position: relative;\n  border-radius: 0;\n  margin: 0 -2px;\n  z-index: 1;\n}\n\n.piano-key.white {\n  border-bottom: 3px solid #aaa;\n  box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.piano-key.black {\n  min-width: 24px;\n  height: 150px;\n  background-color: #000;\n  color: #fff;\n  z-index: 2;\n  border-radius: 0 0 5px 5px;\n  margin: 0 -1px;\n  box-shadow: 0 -2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.piano-key.active {\n  background-color: #ddd;\n}\n\n.piano-key.active.white {\n  background-color: #ccc;\n}\n\n.piano-key.active.black {\n  background-color: #444;\n}\n.v-application .white{\n  background-color: rgba(125, 125, 125, 0.8) !important;\n}\n</style>"],"mappings":"AAqBA,YAAAA,IAAA;AACA;EACAC,KAAA;IACA;MACAC,SAAA;QACA;MAAA,CACA;MACAC,YAAA;IACA;EACA;;EACAC,OAAA;IACAC,QAAAC,GAAA;MACAA,GAAA,CAAAC,MAAA;MAEA,UAAAJ,YAAA,CAAAG,GAAA,CAAAE,OAAA;QACA,MAAAC,KAAA,OAAAT,IAAA,CAAAU,KAAA,GAAAC,aAAA;QACA,KAAAR,YAAA,CAAAG,GAAA,CAAAE,OAAA,IAAAC,KAAA;QAEA,QAAAH,GAAA,CAAAE,OAAA;UACA;YACAC,KAAA,CAAAG,oBAAA;YACA;UACA;YACAH,KAAA,CAAAG,oBAAA;YACA;UACA;QAAA;MAEA;IACA;;IACAC,QAAAP,GAAA;MACAA,GAAA,CAAAC,MAAA;MAEA,SAAAJ,YAAA,CAAAG,GAAA,CAAAE,OAAA;QACA,KAAAL,YAAA,CAAAG,GAAA,CAAAE,OAAA,EAAAM,cAAA;QACA,YAAAX,YAAA,CAAAG,GAAA,CAAAE,OAAA;MACA;IACA;IACAO,cAAAC,KAAA;MACA;MACA,MAAAV,GAAA,QAAAJ,SAAA,CAAAe,IAAA,CAAAX,GAAA,IAAAA,GAAA,CAAAE,OAAA,KAAAQ,KAAA,CAAAR,OAAA;MACA,IAAAF,GAAA;QACA,KAAAD,OAAA,CAAAC,GAAA;MACA;IACA;IACAY,YAAAF,KAAA;MACA;MACA,MAAAV,GAAA,QAAAJ,SAAA,CAAAe,IAAA,CAAAX,GAAA,IAAAA,GAAA,CAAAE,OAAA,KAAAQ,KAAA,CAAAR,OAAA;MACA,IAAAF,GAAA;QACA,KAAAO,OAAA,CAAAP,GAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}