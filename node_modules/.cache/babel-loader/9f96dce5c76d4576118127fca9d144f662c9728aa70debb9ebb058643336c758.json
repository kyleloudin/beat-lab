{"ast":null,"code":"import { createElementVNode as _createElementVNode, withKeys as _withKeys, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"This is a Drum\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"input\", {\n    onKeyup: _cache[0] || (_cache[0] = _withKeys($event => $options.playSound(), [\"enter\"]))\n  }, null, 32 /* HYDRATE_EVENTS */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","onKeyup","_cache","_withKeys","$event","$options","playSound"],"sources":["/Users/kyleloudin/Desktop/repo/drum-machine/src/components/drum-machine.vue"],"sourcesContent":["<template>\n  <h1>This is a Drum</h1>\n  <input v-on:keyup.enter=\"playSound()\" />\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      sounds: [\n        {\n          title: \"snare\",\n          sound: \"snare.wav\",\n          key: \"k\",\n        },\n      ],\n    };\n  },\n  methods: {\n    playSound(fileName) {\n      switch (expression) {\n        case x:\n          // code block\n          break;\n        case y:\n          // code block\n          break;\n        default:\n        // code block\n      }\n      let audio = new Audio(require(fileName));\n      audio.play();\n    },\n    test() {\n      return alert(\"test\");\n    },\n  },\n  created() {\n    window.addEventListener(\"keyup\", this.playSound());\n  },\n  unmounted() {\n    window.removeEventListener(\"keyup\", this.playSound());\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":";gCACEA,mBAAA,CAAuB,YAAnB,gBAAc;;;6DAAlBC,UAAuB,EACvBD,mBAAA,CAAwC;IAA5BE,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,CAAAC,MAAA,IAAQC,QAAA,CAAAC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}